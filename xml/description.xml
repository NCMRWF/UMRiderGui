<?xml version="1.0" encoding="utf-8"?>

<form>

<title> FILL THE DETAILS BELOW . . . </title>
<end> N.C.M.R.W.F </end>
<message>  </message>



<global>
<varsfile> vars_description.xml </varsfile>

<objects>

	<object>
		<label> UMInAnlFiles </label>
		<description>
		UMInAnlFiles takes list of absolute filenames which has correct analysis
		fieldsfile/pp file of UM model valid at 00UTC.
		None option will take hardcoded proper infile names.
		</description>
		<inputType> checkbox </inputType>
		<script> </script>
		<validVals>
			<validVal> qwqg00.pp0 </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> UMInShortFcstFiles </label>
		<description>
		UMInShortFcstFiles takes list of partial filenames which has short forecast
		(kind of analysis) fieldsfile/pp files of UM model produced for 00UTC, 06UTC, 12UTC, 18UTC.
		None option will take hardcoded proper infile names.
		</description>
		<inputType> checkbox </inputType>
		<script> </script>
		<validVals>
			<validVal> umglca_pb </validVal>
			<validVal> umglca_pd </validVal>
			<validVal> umglca_pe </validVal>
			<validVal> umglca_pf </validVal>
			<validVal> umglca_pi </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> UMInLongFcstFiles </label>
		<description>
		UMInLongFcstFiles takes list of partial filenames which has long forecast
		fieldsfile/pp file of UM model based on reference time at 00UTC, 12UTC.
		None option will take hardcoded proper infile names.
		</description>
		<inputType> checkbox </inputType>
		<script> </script>
		<validVals>
			<validVal> umglaa_pb </validVal>
			<validVal> umglaa_pd </validVal>
			<validVal> umglaa_pe </validVal>
			<validVal> umglaa_pf </validVal>
			<validVal> umglaa_pi </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> inpath </label>
		<description>
		model pp filedsfiles path
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> outPath </label>
		<description>
		model grib2 files path
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> tmpPath </label>
		<description>
		working directory (used to create temporary log files)
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> anl_step_hour </label>
		<description>
		analysis step/interval hours. By default it takes 6 hour which mean
		um2grb2 produce 6 hourly instantaneous and/or 6 hourly average and/or
		6 hourly accumulation values analysis files.
		If user specfied as 3 then it will extract only 3 houlry instantaneous fields.
		By default model produced 3 hourly average/accumulation.
		Note: the average and accumulation supports only for 6 hours!!!
		</description>
		<inputType> pinteger </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> anl_aavars_reference_time </label>
		<description>
		anl_aavars_reference_time takes either 'analysis' or 'shortforecast'. When some
		variables are taken from previous cycle short-forecast (average/accumulation)
		vars, the reference time need to be set as either current 'analysis' reference
		cycle (utc) or previous cycle's 'shortforecast' reference time.
		'shortforecast' gives exactly based on which utc that variable has processed,
		whereas 'analysis' shift reference time utc as actual analysis utc time.
		Note : This option applicable only to average/accumulation vars in analysis grib2 files.
		Lets keep default option (i.e. shortforecast)
		</description>
		<inputType> radio </inputType>
		<script> </script>
		<validVals>
			<validVal> shortforecast </validVal>
			<validVal> analysis </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> anl_aavars_time_bounds </label>
		<description>
		anl_aavars_time_bounds takes either 'True' or 'False'. By default, True keeps the
		analysis time bounds, reference time bounds and False removes it (so that
		it become instantaneous instead of average/accumulation vars).
		False will be applicable only if anl_aavars_reference_time arg passed as 'analysis'.
		Note : This option applicable only to average/accumulation vars in analysis grib2 files.
		For post prodction, we keeps the time bounds on till date.
		</description>
		<inputType> boolean </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> fcst_step_hour </label>
		<description>
		long forecast step/interval hours . By default it
		takes 6 hour which mean um2grb2 produce 6 hourly instantaneous and/or
		6 hourly average and/or 6 hourly accumulation values.
		If user specfied as 3 or 24 then it will extract only 3 or 24 hourly
		instantaneous fields and for calculate average/accumulation for 24 hourly.
		By default model produced 3 hourly average/accumulation.
		Note: the average and accumulation supports only for either 3 or 6 or 24 hours
		</description>
		<inputType> pinteger </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> start_long_fcst_hour </label>
		<description>
		long forecast start hour. By default it
		takes 6 hour which mean um2grb2 produce grib2 files from 06-th hour forecasts.
		If user wants from different hours, then they can specify it !
		It should be multiples of 'fcst_step_hour' (see above option)!
		</description>
		<inputType> pinteger </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> end_long_fcst_hour_at_00z </label>
		<description>
		maximum long forecast hours at 00utc cycle produced by NCUM model
		for 10days forecast 240hour (by default 240 hours)
		</description>
		<inputType> pinteger </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> end_long_fcst_hour_at_12z </label>
		<description>
		maximum long forecast hours at 12utc cycle produced by NCUM model
		for 5days forecast 120hour (by default 120 hours)
		</description>
		<inputType> pinteger </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> latitude </label>
		<description>
		latitude is required latitude which user wants to extract from the model
		global data. By default it takes None (i.e. extract model global latitudes)
		User can specify their required latitude in tuple
		For eg : latitude = (-30, 30) will extract only latitudes from 30S to 30N.
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> longitude </label>
		<description>
		longitude is required longitude which user wants to extract from the model
		global data. By default it takes None (i.e. extract model global longitudes)
		User can specify their required longitude in tuple
		For eg : longitude = (60, 100) will extract only longitude from 60E to 100E.
		Note : Model requires longitude should specfied based on (0 to 360), and
		not by (-180 to 180.) In future I may fix it, if user wish to specify
		longitude by within range of (-180, 180)
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> targetGridResolution </label>
		<description>
		targetGridResolution is resolution in degree (1 degree = 100km approx)
		if targetGridResolution is set to None, then model resolution will be
		kept in the grib2 file. This must be a number or None.
		WARNING :  targetGridResolution option will be disabled if targetGridFile enabled.
		</description>
		<inputType> float </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> targetGridFile </label>
		<description>
		targetGridFile should be path of sample grib2 / pp / ff / nc file, which
		contains atleast one variable with latitude, longitude informations. Model
		variables will be converted to this target grid file resolution including
		spatial regrid, start-end of latitude-and-longitude.
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> extraPolateMethod </label>
		<description>
		extraPolateMethod takes either 'auto' or 'linear' or 'mask' or iris supported
		interpolation method. 'linear' means all variables will be linearly extrapolated
		over masked regions also. 'mask' means all masked variables of model outputs,
		will not be extrapolated over masked regions.
		'auto' will take care properly the neccessary variabels will be extrapolated
		over masked regions and remaining variables will be masked over mask regions.
		'auto' options is suggested one!
		</description>
		<inputType> radio </inputType>
		<script> </script>
		<validVals>
			<validVal> auto </validVal>
			<validVal> linear </validVal>
			<validVal> mask </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> pressureLevels </label>
		<description>
		pressureLevels is required pressure levels slice / extract only particular
		set of pressure levels from model pressure levels. User can specify either
		one or more levels. By default it takes None, i.e. it will extract all the
		model pressure levels.
		For eg 1 : pressureLevels = [850]   -> extract 850 hPa only
		For eg 2 : pressureLevels = [850, 500, 200] -> extract only 850, 500, 200 hPa levels only.
		Note 1 : These pressure slice levels applicable to all the pressure level variables.
		Note 2 : At the moment pressure levels interpolation is not supported!
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> fillFullyMaskedVars </label>
		<description>
		If some variable has fully masked (for eg: Incoming Shortwave flux during
		night time) then this option value will be set to that variable. By default
		it takes None, which wont do anything. If it has set to 0 as value, then
		those fully masked vars will be filled with this value.
		</description>
		<inputType> pinteger </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> soilFirstSecondFixedSurfaceUnit </label>
		<description>
		soilFirstSecondFixedSurfaceUnit takes either 'cm' or 'mm'. By default it
		takes 'cm' argument (suggested for general purpose/ WRF-Noah supported).
		For soil moisture/ soil temeperature variables depth below land surface,
		units are initially set to either 'cm' (centimeter) or 'mm' (millimeter),
		and finally converted to 'm' (meter) in wgrib2. But anyhow if grib2 files
		will be ready by some other utility other than wgrib2, then this first and
		second fixed surface units plays matter. So suggested units is 'cm'.
		</description>
		<inputType> radio </inputType>
		<script> </script>
		<validVals>
			<validVal> m </validVal>
			<validVal> cm </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> loadg2utils </label>
		<description>
		Load g2utils from 'system' python which has installed through setup.py (OR)
		## Load g2utils from 'local' previous directory for the operational purpose,
		## where normal user don't have write permission to change the g2utils!
		## So loadg2utils argument should be either system (default) or local.
		</description>
		<inputType> radio </inputType>
		<script> </script>
		<validVals>
			<validVal> local </validVal>
			<validVal> system </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> overwriteFiles </label>
		<description>
		If overwriteFiles option is 'True' then existing output final files (if any)
		will be deleted from outPath and re-creating freshly.
		If overwriteFiles option is 'False' and all output final files already
		exist in the outPath, then program will exit without re-creating the
		output files.
		If partially created files exist (like few hours outfiles only exist or
		intermediate nc files) then by default make overwriteFiles option as True
		(though False as passed to overwriteFiles option).
		</description>
		<inputType> boolean </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> createGrib2CtlIdxFiles </label>
		<description>
		If createCtlIdxFiles is True then um2grb2 module will create grads control
		files and its index files for each and every grib2 files by using g2ctl.pl
		</description>
		<inputType> boolean </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> convertGrib2FilestoGrib1Files </label>
		<description>
		If convertGrib2FilestoGrib1Files is True then using 'cnvgrib -g21' command
		line um2grb2 module will convert grib2 file to grib1 files.
		CAUTION : it may produce invalid variables names, grib1 param code for few
		variables which are produced by this um2grib2 conversion tool!!!
		</description>
		<inputType> boolean </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> grib1FilesNameSuffix </label>
		<description>
		If grib1FilesNameSuffix is '.grib1', then grib1 files will endswith '.grib1' (default).
		otherwise will whatever string assigned will be added at the end of grib1
		file names. None will add nothing to grib1 file names at the end of it.
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> removeGrib2FilesAfterGrib1FilesCreated </label>
		<description>
		If removeGrib2FilesAfterGrib1FilesCreated is True, then grib2 files will be
		deleted and kept only grib1 files. By default False.
		</description>
		<inputType> boolean </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> createGrib1CtlIdxFiles </label>
		<description>
		If createCtlIdxFiles is True then um2grb2 module will create grads control     //OOOO//
		files and its index files for each and every grib1 files by using grib2ctl.pl
		</description>
		<inputType> boolean </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> debug </label>
		<description>
		This debug option should be either True or False. This will just print
		extra information like variables details, shape, execution process, etc.,
		</description>
		<inputType> boolean </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> setGrib2TableParameters </label>
		<description>
		setGrib2TableParameters option takes list of tuples which may contain
		WMO-Grib2 table parameters and its value. Which means, the grib2 table
		parameter options will be overwritten as per user's setting in this option.
		eg1 : setGrib2TableParameters = [('centre', 28), ('subCentre', 0)]
		The above two options will be set to out grib2 files.
		eg2 : setGrib2TableParameters = [('shapeOfTheEarth', 0)]
		The above option will be set to out grib2 files.
		CATUION : User must be aware on what are they setting in this option and
		its causes in out grib2 files! By default this option takes None.
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> wgrib2Arguments </label>
		<description>
		After successfully created the grib2 (final ordered variabels) file,
		wgrib2 commnad will be executed with the 'wgrib2Arguments' options.
		pygrib/IRIS/UMRider is able to write grib2 file with "grid_simple" packing
		algorithm, whereas wgrib2 able to convert packing from "grid_simple" to
		"grid_complex_spatial_differencing" by setting -set_grib_type complex2
		option in it. The second type packing reduces file size 1/3 compare to first
		type packing. And further can be reduced the file size, by passing
		-set_bin_prec 12 (compatible same as ECMWF) which reduces the floating points
		precision (which further reduces the file size 1/5 th of original of first
		packing). By default wgrib2Arguments takes "-set_grib_type complex2 -grib_out"
		as argument. User can override this option by including extra wgrib2 arguments
		Or None (wgrib2 will not be executed).
		-grib_out is important argument (to be compress, set precsion, etc)
		http://www.cpc.ncep.noaa.gov/products/wesley/wgrib2/speed.html
		http://www.cpc.ncep.noaa.gov/products/wesley/wgrib2/set_bin_prec.html
		For global post out, we are not passing -set_bin_prec 12 option, because
		we shouldnot loose floating precision information.
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> callBackScript </label>
		<description>
		This callBackScript option takes any user defined script (any script)!
		User should provide absolute or relative path of their script and make sure
		that script is self executable with shebang and executable permission!
		After successfully created out grib2 files, this callBackScript will be
		executed with possibly command line keyword arguments as follows
		KWargs : (date, outpath, oftype, utc)
		where '--date' -> out files processed date,
		      '--outpath' -> out files path,
		      '--oftype'  -> 'analysis' or 'forecast'
		      '--utc'  -> UTC cycle value in string ('00' or '06' or '12' or '18')
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

</objects>

</global>


<regional>
<varsfile> vars_description.xml </varsfile>

<objects>

	<object>
		<label> UMInAnlFiles </label>
		<description>
		UMInAnlFiles takes list of absolute filenames which has correct analysis
		fieldsfile/pp file of UM model valid at 00UTC.
		None option will take hardcoded proper infile names.
		</description>
		<inputType> checkbox </inputType>
		<script> </script>
		<validVals>
			<validVal> qwqg00.pp0 </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> UMInShortFcstFiles </label>
		<description>
		UMInShortFcstFiles takes list of partial filenames which has short forecast
		(kind of analysis) fieldsfile/pp files of UM model produced for 00UTC, 06UTC, 12UTC, 18UTC.
		None option will take hardcoded proper infile names.
		</description>
		<inputType> checkbox </inputType>
		<script> </script>
		<validVals>
			<validVal> umglca_pb </validVal>
			<validVal> umglca_pd </validVal>
			<validVal> umglca_pe </validVal>
			<validVal> umglca_pf </validVal>
			<validVal> umglca_pi </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> UMInLongFcstFiles </label>
		<description>
		UMInLongFcstFiles takes list of partial filenames which has long forecast
		fieldsfile/pp file of UM model based on reference time at 00UTC, 12UTC.
		None option will take hardcoded proper infile names.
		</description>
		<inputType> checkbox </inputType>
		<script> </script>
		<validVals>
			<validVal> umglaa_pb </validVal>
			<validVal> umglaa_pd </validVal>
			<validVal> umglaa_pe </validVal>
			<validVal> umglaa_pf </validVal>
			<validVal> umglaa_pi </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> inpath </label>
		<description>
		model pp filedsfiles path
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> outPath </label>
		<description>
		model grib2 files path
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> tmpPath </label>
		<description>
		working directory (used to create temporary log files)
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> anl_step_hour </label>
		<description>
		analysis step/interval hours. By default it takes 6 hour which mean
		um2grb2 produce 6 hourly instantaneous and/or 6 hourly average and/or
		6 hourly accumulation values analysis files.
		If user specfied as 3 then it will extract only 3 houlry instantaneous fields.
		By default model produced 3 hourly average/accumulation.
		Note: the average and accumulation supports only for 6 hours!!!
		</description>
		<inputType> pinteger </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> anl_aavars_reference_time </label>
		<description>
		anl_aavars_reference_time takes either 'analysis' or 'shortforecast'. When some
		variables are taken from previous cycle short-forecast (average/accumulation)
		vars, the reference time need to be set as either current 'analysis' reference
		cycle (utc) or previous cycle's 'shortforecast' reference time.
		'shortforecast' gives exactly based on which utc that variable has processed,
		whereas 'analysis' shift reference time utc as actual analysis utc time.
		Note : This option applicable only to average/accumulation vars in analysis grib2 files.
		Lets keep default option (i.e. shortforecast)
		</description>
		<inputType> radio </inputType>
		<script> </script>
		<validVals>
			<validVal> shortforecast </validVal>
			<validVal> analysis </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> anl_aavars_time_bounds </label>
		<description>
		anl_aavars_time_bounds takes either 'True' or 'False'. By default, True keeps the
		analysis time bounds, reference time bounds and False removes it (so that
		it become instantaneous instead of average/accumulation vars).
		False will be applicable only if anl_aavars_reference_time arg passed as 'analysis'.
		Note : This option applicable only to average/accumulation vars in analysis grib2 files.
		For post prodction, we keeps the time bounds on till date.
		</description>
		<inputType> boolean </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> fcst_step_hour </label>
		<description>
		long forecast step/interval hours . By default it
		takes 6 hour which mean um2grb2 produce 6 hourly instantaneous and/or
		6 hourly average and/or 6 hourly accumulation values.
		If user specfied as 3 or 24 then it will extract only 3 or 24 hourly
		instantaneous fields and for calculate average/accumulation for 24 hourly.
		By default model produced 3 hourly average/accumulation.
		Note: the average and accumulation supports only for either 3 or 6 or 24 hours
		</description>
		<inputType> pinteger </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> start_long_fcst_hour </label>
		<description>
		long forecast start hour. By default it
		takes 6 hour which mean um2grb2 produce grib2 files from 06-th hour forecasts.
		If user wants from different hours, then they can specify it !
		It should be multiples of 'fcst_step_hour' (see above option)!
		</description>
		<inputType> pinteger </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> end_long_fcst_hour_at_00z </label>
		<description>
		maximum long forecast hours at 00utc cycle produced by NCUM model
		for 10days forecast 240hour (by default 240 hours)
		</description>
		<inputType> pinteger </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> end_long_fcst_hour_at_12z </label>
		<description>
		maximum long forecast hours at 12utc cycle produced by NCUM model
		for 5days forecast 120hour (by default 120 hours)
		</description>
		<inputType> pinteger </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> latitude </label>
		<description>
		latitude is required latitude which user wants to extract from the model
		global data. By default it takes None (i.e. extract model global latitudes)
		User can specify their required latitude in tuple
		For eg : latitude = (-30, 30) will extract only latitudes from 30S to 30N.
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> longitude </label>
		<description>
		longitude is required longitude which user wants to extract from the model
		global data. By default it takes None (i.e. extract model global longitudes)
		User can specify their required longitude in tuple
		For eg : longitude = (60, 100) will extract only longitude from 60E to 100E.
		Note : Model requires longitude should specfied based on (0 to 360), and
		not by (-180 to 180.) In future I may fix it, if user wish to specify
		longitude by within range of (-180, 180)
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> targetGridResolution </label>
		<description>
		targetGridResolution is resolution in degree (1 degree = 100km approx)
		if targetGridResolution is set to None, then model resolution will be
		kept in the grib2 file. This must be a number or None.
		WARNING :  targetGridResolution option will be disabled if targetGridFile enabled.
		</description>
		<inputType> float </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> targetGridFile </label>
		<description>
		targetGridFile should be path of sample grib2 / pp / ff / nc file, which
		contains atleast one variable with latitude, longitude informations. Model
		variables will be converted to this target grid file resolution including
		spatial regrid, start-end of latitude-and-longitude.
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> extraPolateMethod </label>
		<description>
		extraPolateMethod takes either 'auto' or 'linear' or 'mask' or iris supported
		interpolation method. 'linear' means all variables will be linearly extrapolated
		over masked regions also. 'mask' means all masked variables of model outputs,
		will not be extrapolated over masked regions.
		'auto' will take care properly the neccessary variabels will be extrapolated
		over masked regions and remaining variables will be masked over mask regions.
		'auto' options is suggested one!
		</description>
		<inputType> radio </inputType>
		<script> </script>
		<validVals>
			<validVal> auto </validVal>
			<validVal> linear </validVal>
			<validVal> mask </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> pressureLevels </label>
		<description>
		pressureLevels is required pressure levels slice / extract only particular
		set of pressure levels from model pressure levels. User can specify either
		one or more levels. By default it takes None, i.e. it will extract all the
		model pressure levels.
		For eg 1 : pressureLevels = [850]   -> extract 850 hPa only
		For eg 2 : pressureLevels = [850, 500, 200] -> extract only 850, 500 and 200 hPa levels only.
		Note 1 : These pressure slice levels applicable to all the pressure level variables.
		Note 2 : At the moment pressure levels interpolation is not supported!
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> fillFullyMaskedVars </label>
		<description>
		If some variable has fully masked (for eg: Incoming Shortwave flux during
		night time) then this option value will be set to that variable. By default
		it takes None, which wont do anything. If it has set to 0 as value, then
		those fully masked vars will be filled with this value.
		</description>
		<inputType> pinteger </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> soilFirstSecondFixedSurfaceUnit </label>
		<description>
		soilFirstSecondFixedSurfaceUnit takes either 'cm' or 'mm'. By default it
		takes 'cm' argument (suggested for general purpose/ WRF-Noah supported).
		For soil moisture/ soil temeperature variables depth below land surface,
		units are initially set to either 'cm' (centimeter) or 'mm' (millimeter),
		and finally converted to 'm' (meter) in wgrib2. But anyhow if grib2 files
		will be ready by some other utility other than wgrib2, then this first and
		second fixed surface units plays matter. So suggested units is 'cm'.
		</description>
		<inputType> radio </inputType>
		<script> </script>
		<validVals>
			<validVal> m </validVal>
			<validVal> cm </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> loadg2utils </label>
		<description>
		Load g2utils from 'system' python which has installed through setup.py (OR)
		## Load g2utils from 'local' previous directory for the operational purpose,
		## where normal user don't have write permission to change the g2utils!
		## So loadg2utils argument should be either system (default) or local.
		</description>
		<inputType> radio </inputType>
		<script> </script>
		<validVals>
			<validVal> local </validVal>
			<validVal> system </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> overwriteFiles </label>
		<description>
		If overwriteFiles option is 'True' then existing output final files (if any)
		will be deleted from outPath and re-creating freshly.
		If overwriteFiles option is 'False' and all output final files already
		exist in the outPath, then program will exit without re-creating the
		output files.
		If partially created files exist (like few hours outfiles only exist or
		intermediate nc files) then by default make overwriteFiles option as True
		(though False as passed to overwriteFiles option).
		</description>
		<inputType> boolean </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> createGrib2CtlIdxFiles </label>
		<description>
		If createCtlIdxFiles is True then um2grb2 module will create grads control
		files and its index files for each and every grib2 files by using g2ctl.pl
		</description>
		<inputType> boolean </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> convertGrib2FilestoGrib1Files </label>
		<description>
		If convertGrib2FilestoGrib1Files is True then using 'cnvgrib -g21' command
		line um2grb2 module will convert grib2 file to grib1 files.
		CAUTION : it may produce invalid variables names, grib1 param code for few
		variables which are produced by this um2grib2 conversion tool!!!
		</description>
		<inputType> boolean </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> grib1FilesNameSuffix </label>
		<description>
		If grib1FilesNameSuffix is '.grib1', then grib1 files will endswith '.grib1' (default).
		otherwise will whatever string assigned will be added at the end of grib1
		file names. None will add nothing to grib1 file names at the end of it.
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> removeGrib2FilesAfterGrib1FilesCreated </label>
		<description>
		If removeGrib2FilesAfterGrib1FilesCreated is True, then grib2 files will be
		deleted and kept only grib1 files. By default False.
		</description>
		<inputType> boolean </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> createGrib1CtlIdxFiles </label>
		<description>
		If createCtlIdxFiles is True then um2grb2 module will create grads control     //OOOO//
		files and its index files for each and every grib1 files by using grib2ctl.pl
		</description>
		<inputType> boolean </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> debug </label>
		<description>
		This debug option should be either True or False. This will just print
		extra information like variables details, shape, execution process, etc.,
		</description>
		<inputType> boolean </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> setGrib2TableParameters </label>
		<description>
		setGrib2TableParameters option takes list of tuples which may contain
		WMO-Grib2 table parameters and its value. Which means, the grib2 table
		parameter options will be overwritten as per user's setting in this option.
		eg1 : setGrib2TableParameters = [('centre', 28), ('subCentre', 0)]
		The above two options will be set to out grib2 files.
		eg2 : setGrib2TableParameters = [('shapeOfTheEarth', 0)]
		The above option will be set to out grib2 files.
		CATUION : User must be aware on what are they setting in this option and
		its causes in out grib2 files! By default this option takes None.
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> wgrib2Arguments </label>
		<description>
		After successfully created the grib2 (final ordered variabels) file,
		wgrib2 commnad will be executed with the 'wgrib2Arguments' options.
		pygrib/IRIS/UMRider is able to write grib2 file with "grid_simple" packing
		algorithm, whereas wgrib2 able to convert packing from "grid_simple" to
		"grid_complex_spatial_differencing" by setting -set_grib_type complex2
		option in it. The second type packing reduces file size 1/3 compare to first
		type packing. And further can be reduced the file size, by passing
		-set_bin_prec 12 (compatible same as ECMWF) which reduces the floating points
		precision (which further reduces the file size 1/5 th of original of first
		packing). By default wgrib2Arguments takes "-set_grib_type complex2 -grib_out"
		as argument. User can override this option by including extra wgrib2 arguments
		Or None (wgrib2 will not be executed).
		-grib_out is important argument (to be compress, set precsion, etc)
		http://www.cpc.ncep.noaa.gov/products/wesley/wgrib2/speed.html
		http://www.cpc.ncep.noaa.gov/products/wesley/wgrib2/set_bin_prec.html
		For global post out, we are not passing -set_bin_prec 12 option, because
		we shouldnot loose floating precision information.
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> callBackScript </label>
		<description>
		This callBackScript option takes any user defined script (any script)!
		User should provide absolute or relative path of their script and make sure
		that script is self executable with shebang and executable permission!
		After successfully created out grib2 files, this callBackScript will be
		executed with possibly command line keyword arguments as follows
		KWargs : (date, outpath, oftype, utc)
		where '--date' -> out files processed date,
		      '--outpath' -> out files path,
		      '--oftype'  -> 'analysis' or 'forecast'
		      '--utc'  -> UTC cycle value in string ('00' or '06' or '12' or '18')
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

</objects>

</regional>


<ensemble>
<varsfile> vars_description.xml </varsfile>

<objects>

	<object>
		<label> UMInAnlFiles </label>
		<description>
		UMInAnlFiles takes list of absolute filenames which has correct analysis
		fieldsfile/pp file of UM model valid at 00UTC.
		None option will take hardcoded proper infile names.
		</description>
		<inputType> checkbox </inputType>
		<script> </script>
		<validVals>
			<validVal> qwqg00.pp0 </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> UMInShortFcstFiles </label>
		<description>
		UMInShortFcstFiles takes list of partial filenames which has short forecast
		(kind of analysis) fieldsfile/pp files of UM model produced for 00UTC, 06UTC, 12UTC, 18UTC.
		None option will take hardcoded proper infile names.
		</description>
		<inputType> checkbox </inputType>
		<script> </script>
		<validVals>
			<validVal> umglca_pb </validVal>
			<validVal> umglca_pd </validVal>
			<validVal> umglca_pe </validVal>
			<validVal> umglca_pf </validVal>
			<validVal> umglca_pi </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> UMInLongFcstFiles </label>
		<description>
		UMInLongFcstFiles takes list of partial filenames which has long forecast
		fieldsfile/pp file of UM model based on reference time at 00UTC, 12UTC.
		None option will take hardcoded proper infile names.
		</description>
		<inputType> checkbox </inputType>
		<script> </script>
		<validVals>
			<validVal> umglaa_pb </validVal>
			<validVal> umglaa_pd </validVal>
			<validVal> umglaa_pe </validVal>
			<validVal> umglaa_pf </validVal>
			<validVal> umglaa_pi </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> inpath </label>
		<description>
		model pp filedsfiles path
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> outPath </label>
		<description>
		model grib2 files path
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> tmpPath </label>
		<description>
		working directory (used to create temporary log files)
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> anl_step_hour </label>
		<description>
		analysis step/interval hours. By default it takes 6 hour which mean
		um2grb2 produce 6 hourly instantaneous and/or 6 hourly average and/or
		6 hourly accumulation values analysis files.
		If user specfied as 3 then it will extract only 3 houlry instantaneous fields.
		By default model produced 3 hourly average/accumulation.
		Note: the average and accumulation supports only for 6 hours!!!
		</description>
		<inputType> pinteger </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> anl_aavars_reference_time </label>
		<description>
		anl_aavars_reference_time takes either 'analysis' or 'shortforecast'. When some
		variables are taken from previous cycle short-forecast (average/accumulation)
		vars, the reference time need to be set as either current 'analysis' reference
		cycle (utc) or previous cycle's 'shortforecast' reference time.
		'shortforecast' gives exactly based on which utc that variable has processed,
		whereas 'analysis' shift reference time utc as actual analysis utc time.
		Note : This option applicable only to average/accumulation vars in analysis grib2 files.
		Lets keep default option (i.e. shortforecast)
		</description>
		<inputType> radio </inputType>
		<script> </script>
		<validVals>
			<validVal> shortforecast </validVal>
			<validVal> analysis </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> anl_aavars_time_bounds </label>
		<description>
		anl_aavars_time_bounds takes either 'True' or 'False'. By default, True keeps the
		analysis time bounds, reference time bounds and False removes it (so that
		it become instantaneous instead of average/accumulation vars).
		False will be applicable only if anl_aavars_reference_time arg passed as 'analysis'.
		Note : This option applicable only to average/accumulation vars in analysis grib2 files.
		For post prodction, we keeps the time bounds on till date.
		</description>
		<inputType> boolean </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> fcst_step_hour </label>
		<description>
		long forecast step/interval hours . By default it
		takes 6 hour which mean um2grb2 produce 6 hourly instantaneous and/or
		6 hourly average and/or 6 hourly accumulation values.
		If user specfied as 3 or 24 then it will extract only 3 or 24 hourly
		instantaneous fields and for calculate average/accumulation for 24 hourly.
		By default model produced 3 hourly average/accumulation.
		Note: the average and accumulation supports only for either 3 or 6 or 24 hours
		</description>
		<inputType> pinteger </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> start_long_fcst_hour </label>
		<description>
		long forecast start hour. By default it
		takes 6 hour which mean um2grb2 produce grib2 files from 06-th hour forecasts.
		If user wants from different hours, then they can specify it !
		It should be multiples of 'fcst_step_hour' (see above option)!
		</description>
		<inputType> pinteger </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> end_long_fcst_hour_at_00z </label>
		<description>
		maximum long forecast hours at 00utc cycle produced by NCUM model
		for 10days forecast 240hour (by default 240 hours)
		</description>
		<inputType> pinteger </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> end_long_fcst_hour_at_12z </label>
		<description>
		maximum long forecast hours at 12utc cycle produced by NCUM model
		for 5days forecast 120hour (by default 120 hours)
		</description>
		<inputType> pinteger </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> latitude </label>
		<description>
		latitude is required latitude which user wants to extract from the model
		global data. By default it takes None (i.e. extract model global latitudes)
		User can specify their required latitude in tuple
		For eg : latitude = (-30, 30) will extract only latitudes from 30S to 30N.
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> longitude </label>
		<description>
		longitude is required longitude which user wants to extract from the model
		global data. By default it takes None (i.e. extract model global longitudes)
		User can specify their required longitude in tuple
		For eg : longitude = (60, 100) will extract only longitude from 60E to 100E.
		Note : Model requires longitude should specfied based on (0 to 360), and
		not by (-180 to 180.) In future I may fix it, if user wish to specify
		longitude by within range of (-180, 180)
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> targetGridResolution </label>
		<description>
		targetGridResolution is resolution in degree (1 degree = 100km approx)
		if targetGridResolution is set to None, then model resolution will be
		kept in the grib2 file. This must be a number or None.
		WARNING :  targetGridResolution option will be disabled if targetGridFile enabled.
		</description>
		<inputType> float </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> targetGridFile </label>
		<description>
		targetGridFile should be path of sample grib2 / pp / ff / nc file, which
		contains atleast one variable with latitude, longitude informations. Model
		variables will be converted to this target grid file resolution including
		spatial regrid, start-end of latitude-and-longitude.
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> extraPolateMethod </label>
		<description>
		extraPolateMethod takes either 'auto' or 'linear' or 'mask' or iris supported
		interpolation method. 'linear' means all variables will be linearly extrapolated
		over masked regions also. 'mask' means all masked variables of model outputs,
		will not be extrapolated over masked regions.
		'auto' will take care properly the neccessary variabels will be extrapolated
		over masked regions and remaining variables will be masked over mask regions.
		'auto' options is suggested one!
		</description>
		<inputType> radio </inputType>
		<script> </script>
		<validVals>
			<validVal> auto </validVal>
			<validVal> linear </validVal>
			<validVal> mask </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> pressureLevels </label>
		<description>
		pressureLevels is required pressure levels slice / extract only particular
		set of pressure levels from model pressure levels. User can specify either
		one or more levels. By default it takes None, i.e. it will extract all the
		model pressure levels.
		For eg 1 : pressureLevels = [850]   -> extract 850 hPa only
		For eg 2 : pressureLevels = [850, 500, 200] -> extract only 850, 500 and 200 hPa levels only.
		Note 1 : These pressure slice levels applicable to all the pressure level variables.
		Note 2 : At the moment pressure levels interpolation is not supported!
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> fillFullyMaskedVars </label>
		<description>
		If some variable has fully masked (for eg: Incoming Shortwave flux during
		night time) then this option value will be set to that variable. By default
		it takes None, which wont do anything. If it has set to 0 as value, then
		those fully masked vars will be filled with this value.
		</description>
		<inputType> pinteger </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> soilFirstSecondFixedSurfaceUnit </label>
		<description>
		soilFirstSecondFixedSurfaceUnit takes either 'cm' or 'mm'. By default it
		takes 'cm' argument (suggested for general purpose/ WRF-Noah supported).
		For soil moisture/ soil temeperature variables depth below land surface,
		units are initially set to either 'cm' (centimeter) or 'mm' (millimeter),
		and finally converted to 'm' (meter) in wgrib2. But anyhow if grib2 files
		will be ready by some other utility other than wgrib2, then this first and
		second fixed surface units plays matter. So suggested units is 'cm'.
		</description>
		<inputType> radio </inputType>
		<script> </script>
		<validVals>
			<validVal> m </validVal>
			<validVal> cm </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> loadg2utils </label>
		<description>
		Load g2utils from 'system' python which has installed through setup.py (OR)
		## Load g2utils from 'local' previous directory for the operational purpose,
		## where normal user don't have write permission to change the g2utils!
		## So loadg2utils argument should be either system (default) or local.
		</description>
		<inputType> radio </inputType>
		<script> </script>
		<validVals>
			<validVal> local </validVal>
			<validVal> system </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> overwriteFiles </label>
		<description>
		If overwriteFiles option is 'True' then existing output final files (if any)
		will be deleted from outPath and re-creating freshly.
		If overwriteFiles option is 'False' and all output final files already
		exist in the outPath, then program will exit without re-creating the
		output files.
		If partially created files exist (like few hours outfiles only exist or
		intermediate nc files) then by default make overwriteFiles option as True
		(though False as passed to overwriteFiles option).
		</description>
		<inputType> boolean </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> createGrib2CtlIdxFiles </label>
		<description>
		If createCtlIdxFiles is True then um2grb2 module will create grads control
		files and its index files for each and every grib2 files by using g2ctl.pl
		</description>
		<inputType> boolean </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> convertGrib2FilestoGrib1Files </label>
		<description>
		If convertGrib2FilestoGrib1Files is True then using 'cnvgrib -g21' command
		line um2grb2 module will convert grib2 file to grib1 files.
		CAUTION : it may produce invalid variables names, grib1 param code for few
		variables which are produced by this um2grib2 conversion tool!!!
		</description>
		<inputType> boolean </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> grib1FilesNameSuffix </label>
		<description>
		If grib1FilesNameSuffix is '.grib1', then grib1 files will endswith '.grib1' (default).
		otherwise will whatever string assigned will be added at the end of grib1
		file names. None will add nothing to grib1 file names at the end of it.
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> removeGrib2FilesAfterGrib1FilesCreated </label>
		<description>
		If removeGrib2FilesAfterGrib1FilesCreated is True, then grib2 files will be
		deleted and kept only grib1 files. By default False.
		</description>
		<inputType> boolean </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>


	<object>
		<label> createGrib1CtlIdxFiles </label>
		<description>
		If createCtlIdxFiles is True then um2grb2 module will create grads control     //OOOO//
		files and its index files for each and every grib1 files by using grib2ctl.pl
		</description>
		<inputType> boolean </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> debug </label>
		<description>
		This debug option should be either True or False. This will just print
		extra information like variables details, shape, execution process, etc.,
		</description>
		<inputType> boolean </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> setGrib2TableParameters </label>
		<description>
		setGrib2TableParameters option takes list of tuples which may contain
		WMO-Grib2 table parameters and its value. Which means, the grib2 table
		parameter options will be overwritten as per user's setting in this option.
		eg1 : setGrib2TableParameters = [('centre', 28), ('subCentre', 0)]
		The above two options will be set to out grib2 files.
		eg2 : setGrib2TableParameters = [('shapeOfTheEarth', 0)]
		The above option will be set to out grib2 files.
		CATUION : User must be aware on what are they setting in this option and
		its causes in out grib2 files! By default this option takes None.
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> wgrib2Arguments </label>
		<description>
		After successfully created the grib2 (final ordered variabels) file,
		wgrib2 commnad will be executed with the 'wgrib2Arguments' options.
		pygrib/IRIS/UMRider is able to write grib2 file with "grid_simple" packing
		algorithm, whereas wgrib2 able to convert packing from "grid_simple" to
		"grid_complex_spatial_differencing" by setting -set_grib_type complex2
		option in it. The second type packing reduces file size 1/3 compare to first
		type packing. And further can be reduced the file size, by passing
		-set_bin_prec 12 (compatible same as ECMWF) which reduces the floating points
		precision (which further reduces the file size 1/5 th of original of first
		packing). By default wgrib2Arguments takes "-set_grib_type complex2 -grib_out"
		as argument. User can override this option by including extra wgrib2 arguments
		Or None (wgrib2 will not be executed).
		-grib_out is important argument (to be compress, set precsion, etc)
		http://www.cpc.ncep.noaa.gov/products/wesley/wgrib2/speed.html
		http://www.cpc.ncep.noaa.gov/products/wesley/wgrib2/set_bin_prec.html
		For global post out, we are not passing -set_bin_prec 12 option, because
		we shouldnot loose floating precision information.
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>

	<object>
		<label> callBackScript </label>
		<description>
		This callBackScript option takes any user defined script (any script)!
		User should provide absolute or relative path of their script and make sure
		that script is self executable with shebang and executable permission!
		After successfully created out grib2 files, this callBackScript will be
		executed with possibly command line keyword arguments as follows
		KWargs : (date, outpath, oftype, utc)
		where '--date' -> out files processed date,
		      '--outpath' -> out files path,
		      '--oftype'  -> 'analysis' or 'forecast'
		      '--utc'  -> UTC cycle value in string ('00' or '06' or '12' or '18')
		</description>
		<inputType> text </inputType>
		<script> </script>
		<validVals>
			<validVal>  </validVal>
			<validVal>  </validVal>
			<validVal>  </validVal>
		</validVals>
		<comment> </comment>
	</object>
</objects>

</ensemble>

</form>
